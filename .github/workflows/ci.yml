name: 🧠 SarlakBot v6 Full - CI/CD Pipeline

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main ]

jobs:
  quality-check:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11]
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🐍 Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: 📦 Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: 🔧 Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
        
    - name: 🎨 Code formatting check (Black)
      run: |
        black --check .
        
    - name: 🔍 Linting (Ruff)
      run: |
        ruff check . --statistics
        
    - name: 🔧 Auto-fix linting issues
      run: |
        ruff check . --fix
        
    - name: 🏷️ Type checking (MyPy)
      run: |
        mypy app/ --ignore-missing-imports
        
    - name: 🧪 Run tests
      run: |
        pytest tests/ -v --cov=app --cov-report=xml
        
    - name: 📊 Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        
  audit-loop:
    runs-on: ubuntu-latest
    needs: quality-check
    if: github.event_name == 'push'
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 2
        
    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: 🔧 Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
        
    - name: 🧠 Run audit analysis
      run: |
        python scripts/audit_analyzer.py
        
    - name: 📝 Generate audit report
      run: |
        python scripts/generate_audit_report.py
        
    - name: 📤 Upload audit results
      uses: actions/upload-artifact@v3
      with:
        name: audit-report-${{ github.sha }}
        path: audit-reports/
        
  deployment:
    runs-on: ubuntu-latest
    needs: [quality-check, audit-loop]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🚀 Deploy to production
      run: |
        echo "🚀 Production deployment would happen here"
        # Add your deployment commands here
        
    - name: 📢 Notify deployment
      run: |
        echo "✅ SarlakBot v6 Full deployed successfully!"
